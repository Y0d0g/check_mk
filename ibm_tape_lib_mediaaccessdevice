#!/usr/bin/python

# Jodok Ole Muellers <muellejo(at)aschendorff(dot)de>
# Version 0.2 31.07.2014

# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation in version 2. This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY; with-
# out even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License for more de-
# ails. You should have received a copy of the GNU General Public
# License along with GNU Make; see the file COPYING. If not, write
# to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
# Boston, MA 02110-1301 USA.
import pprint

# dict to map status code to description
# see /usr/share/snmp/mibs/SNIA-SML-rev1-21.mib
OperationalStatus2desc = {
	0	:	"unknown",
	1	:	"other",
	2	:	"ok",
	3	:	"degraded",
	4	:	"stressed",
	5	:	"predictiveFailure",
	6	:	"error",
	7	:	"non-RecoverableError",
	8	:	"starting",
	9	:	"stopping",
	10	:	"stopped",
	11	:	"inService",
	12	:	"noContact",
	13	:	"lostCommunication",
	14	:	"aborted",
	15	:	"dormant",
	16	:	"supportingEntityInError",
	17	:	"completed",
	18	:	"powerMode",
	19	:	"dMTFReserved",
	32768	:	"vendorReserved",
}

NeedsCleaning2desc = {
	0	:	"unknown",
	1	:	"true",
	2	:	"false",
}

# inventory function
def inventory_ibm_tape_lib_mediaaccessdevice(checkname, info):
	#pprint.pprint(info)
	inventory = []
	for DeviceName, NeedsCleaning, OperationalStatus in info:
		inventory.append((DeviceName, None ))
	#pprint.pprint(inventory)
	return inventory 

# check function
def check_ibm_tape_lib_mediaaccessdevice(item, params, info):
	for DeviceName, NeedsCleaning, OperationalStatus in info:
		if DeviceName == item:
			if int(OperationalStatus) == 2 and int(NeedsCleaning) == 2 :
				return (0, "OK - %s OperationalStatus:%s NeedsCleaning:%s" % ( DeviceName, OperationalStatus2desc[ int(OperationalStatus) ] , NeedsCleaning2desc[ int(NeedsCleaning) ] ) )
			else:
				return (1, "WARNING - %s OperationalStatus:%s NeedsCleaning:%s" % ( DeviceName, OperationalStatus, NeedsCleaning ) )
	return (3, "UNKOWN - something went wrong")

# declare the check to check_mk
#   The check function ( first parameter)
#   The service description for Nagios (second parameter)
#   Has Performance Data 0/1 (third paramter)
#   The inventory function (fourth parameter)
check_info['ibm_tape_lib_mediaaccessdevice'] = (check_ibm_tape_lib_mediaaccessdevice, "%s", 0, inventory_ibm_tape_lib_mediaaccessdevice)

# datasource function 
snmp_info['ibm_tape_lib_mediaaccessdevice']  = ( ".1.3.6.1.4.1.14851.3.1.6.2.1", [ '3', '6', '11' ])

snmp_scan_functions['ibm_tape_lib_mediaaccessdevice'] = \
	lambda oid: oid(".1.3.6.1.4.1.2.6.182.3.3.1.0") == "IBM System Storage TS3500 Tape Library"
